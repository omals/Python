# -*- coding: utf-8 -*-
"""5_Question.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ytgeXg7HM4Aj4ZHkyLk3W_anwhK39zRb

# **Question 5**

Develop a program to read a string and perform the following
operations:


*  Print all possible substring
*  Print all possible substrings of length K
*  Print all possible substrings of length K with N distinct characters
*  Print all palindrome substrings
"""

#Throughout the program 's' is the string
#k-length of sub string   
#n-number of distinct characters

#function to generate substring
def substring(s):                              
  print("\nSubstrings '",s,"'")
  for i in range(len(s)+1):
    for j in range(i+1,len(s)+1):
       print(s[i:j],end=" ")    
  print("\t")

#function to generate substring of particular length           
def lengthsubstring(s,k):
   print("\nSubstrings of length :",k,"\n\t",end="")
   for i in range(len(s)+1):
    for j in range(len(s)+1): 
        if len(s[i:j])==k:
            print(s[i:j],end=" ")
   print()

#function to determine the substring with distrinct characters           
def substringdistinct(s,k,n):            
   print("\nSubstrings of length ",k," with ",n," distinct characters\n\t",end="")
   count=0
   for i in range(len(s)+1):
    for j in range(len(s)+1):
        if len(s[i:j])==k:
           sets=set(s[i:j])              #sets-set string
           if len(sets)==n:
             print(s[i:j],end=" ")
             count=1
   if count==0:
      print("There no substrings with ",n," distinct characters in ",k,"length substring")
   print()

#function to find the maximum length substring with n distinct characters
def substringmaxlength(s,n):
   count=0
   temp2=0
   string=[]
   for i in range(len(s)+1):
    for j in range(i+1,len(s)+1):            #sets=set(s[i:j]) 
      if len(set(s[i:j]))==n:
        string.append(s[i:j])
   for i in range(len(string)):
     if(len(string[i])>len(string[-1])):
         print(string[i],end=" ")
         count=1
   #print(maxstring,end=" ")
   if count==0:
      print("There no substrings with ",n," distinct characters in length substring")
   print()

#function to print for palindrome of the string  
def palindrome(s):
   print("\n\tPalindrome substrings")
   for i in range(len(s)+1):
    for j in range(i+1,len(s)):
              sub=s[i:j]                #sub- sub string
              subin=sub[::-1]           #subin- sub string inverse
              if sub==subin:
                 print(subin,end=" ")
   print()

#function where main calling for all function happenning
def main():
  string=str(input("Enter the String:"))
  substring(string)
  length=int(input("\nEnter the length:"))
  lengthsubstring(string,length)
  terms=int(input("\nEnter the number of distinct characters:"))       #terms-to store the numbber of distinct characters
  substringdistinct(string,length,terms)
  print("\nSubstring of length maximum with ",terms," distinct characters\n\t",end="")
  substringmaxlength(string,terms)
  palindrome(string)     

main()                #functions invokation

"""**Test Cases**

<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;}
.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}
.tg .tg-7btt{border-color:inherit;font-weight:bold;text-align:center;vertical-align:top}
</style>
<table class="tg">
<thead>
  <tr>
    <th class="tg-7btt">Test Cases No.</th>
    <th class="tg-7btt">Descripton</th>
    <th class="tg-7btt">Input</th>
    <th class="tg-7btt">Expected output</th>
    <th class="tg-7btt">Actual output</th>
    <th class="tg-7btt">result</th>
  </tr>
</thead>
<tbody>
  <tr>
    <td class="tg-c3ow">1</td>
    <td class="tg-c3ow">Print sub strings<br></td>
    <td class="tg-c3ow">abaca<br></td>
    <td class="tg-c3ow">a ab aba abaca b ba <br>bac baca a ac aca c ca a</td>
    <td class="tg-c3ow">a ab aba abaca b ba <br>bac baca a ac aca c ca a</td>
    <td class="tg-c3ow">Pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">2</td>
    <td class="tg-c3ow">Print Sub Strings with length k<br></td>
    <td class="tg-c3ow">3</td>
    <td class="tg-c3ow">aba bac aca</td>
    <td class="tg-c3ow">aba bac aca<br></td>
    <td class="tg-c3ow">Pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">3</td>
    <td class="tg-c3ow">Print substring of length k<br>with n distinct characters<br></td>
    <td class="tg-c3ow">2</td>
    <td class="tg-c3ow">aba aca</td>
    <td class="tg-c3ow">aba aca<br></td>
    <td class="tg-c3ow">Pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">4</td>
    <td class="tg-c3ow">Print substring of maximum length<br>with n distinct characters<br></td>
    <td class="tg-c3ow">2</td>
    <td class="tg-c3ow">aba aca</td>
    <td class="tg-c3ow">aba aca<br></td>
    <td class="tg-c3ow">Pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">5</td>
    <td class="tg-c3ow">Palindromic sub strings</td>
    <td class="tg-c3ow">abaca</td>
    <td class="tg-c3ow">a aba b a aca c a</td>
    <td class="tg-c3ow">a aba b a aca c a</td>
    <td class="tg-c3ow">Pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">6</td>
    <td class="tg-c3ow">Input for numbers<br>Print substrings<br></td>
    <td class="tg-c3ow">12134</td>
    <td class="tg-c3ow">1 12 121 1213 12134 2 21 213<br>2134 1 13 134 3 34 4<br></td>
    <td class="tg-c3ow">1 12 121 1213 12134 2 21 213<br>2134 1 13 134 3 34 4<br></td>
    <td class="tg-c3ow">pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">7</td>
    <td class="tg-c3ow">Print Sub Strings with length k</td>
    <td class="tg-c3ow">3</td>
    <td class="tg-c3ow">121 213 134</td>
    <td class="tg-c3ow">121 213 134</td>
    <td class="tg-c3ow">Pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">8</td>
    <td class="tg-c3ow">Print substring of length k<br>with n distinct characters<br></td>
    <td class="tg-c3ow">1</td>
    <td class="tg-c3ow">There no substrings with 1 distinct<br>characters in 3 length substring<br></td>
    <td class="tg-c3ow">There no substrings with 1 distinct<br><br>characters in 3 length substring</td>
    <td class="tg-c3ow">Pass</td>
  </tr>
  <tr>
    <td class="tg-c3ow">9</td>
    <td class="tg-c3ow">Print palidromic sub strings</td>
    <td class="tg-c3ow">12134</td>
    <td class="tg-c3ow">1 121 2 1 3 4</td>
    <td class="tg-c3ow">1 121 2 1 3 4</td>
    <td class="tg-c3ow">Pass</td>
  </tr>
</tbody>
</table>
"""